# Server Configuration
PORT=3000
NODE_ENV=development

# Database Configuration
DB_HOST=backboard-postgres
DB_PORT=5432
DB_NAME=backboard-user-service
DB_USER=postgres
DB_PASSWORD=postgres

# JWT Configuration
# Generate RSA keys using: node scripts/generate-keys.js
# Copy the entire key including -----BEGIN/END----- markers
# Use \n for newlines (the script will format them correctly)
JWT_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour-Private-Key-Here\n-----END PRIVATE KEY-----\n"
JWT_PUBLIC_KEY="-----BEGIN PUBLIC KEY-----\nYour-Public-Key-Here\n-----END PUBLIC KEY-----\n"
JWT_EXPIRES_IN=7d

# Admin Permissions (comma-separated)
# These permissions will be required for admin endpoints (GET /api/users, GET /api/users/:id)
ADMIN_PERMISSIONS=read:users,write:users

# RabbitMQ Configuration
# URL format: amqp[s]://username:password@host:port
# Note: vhost is configured separately and will be properly encoded
# Connection uses automatic retry with exponential backoff (max 10 attempts)
RABBITMQ_URL=amqp://backboard:backboardpass@backboard-rabbitmq:5672
RABBITMQ_VHOST=/
RABBITMQ_EXCHANGE=user.events

# OpenTelemetry Configuration
# Set to 'false' to disable tracing (useful for local development without APM)
# Tracing is automatically disabled if OTEL_EXPORTER_OTLP_TRACES_ENDPOINT is not set
OTEL_ENABLED=true

# OTLP gRPC endpoint (prefer gRPC for better performance)
# Comment out or remove if you don't have an APM server running
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://apm-server:4317
OTEL_EXPORTER_OTLP_PROTOCOL=grpc

# Service identity and resource attributes
OTEL_SERVICE_NAME=user-service
OTEL_RESOURCE_ATTRIBUTES=deployment.environment=local,service.version=0.1.0

# Sampling configuration (0.2 = 20% of traces)
OTEL_TRACES_SAMPLER=parentbased_traceidratio
OTEL_TRACES_SAMPLER_ARG=0.2

